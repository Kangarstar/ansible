# Ce role déploie portainer en Haute disponibilité sur un cluster
# Il déploie un agent portainer sur chaque noeud de la swarm et l'interface portainer sur un noeud de la swarm
# Ce role est a lancer seulement après avoir installé docker et docker compose, initialisé la swarm et configuré microceph
- name: Check if 'portainer' stack exists
  ansible.builtin.command: docker stack ls --format '{{ "{{.Name}}" }}'
  register: stack_list
  changed_when: false

# Supprimer la stack si elle existe
- name: Remove existing Portainer stack
  community.docker.docker_stack:
    name: portainer
    state: absent
  when: "'portainer' in stack_list.stdout_lines"
  run_once: true
  register: stack_removed
  notify: Wait for stack removal

# Vérifier si le réseau existe déjà
- name: Check if network exists
  ansible.builtin.command: docker network ls --filter "name={{ network_name }}" --format '{{ "{{.Name}}" }}'
  register: network_list
  changed_when: false
  run_once: true

# Créer le réseau s'il n'existe pas
- name: Create Docker network
  community.docker.docker_network:
    name: "{{ network_name }}"
    driver: overlay
    attachable: true
  when: "network_name not in network_list.stdout_lines"
  run_once: true

# S'assurer que le répertoire de données existe
# - name: Ensure /mnt/cephfs/portainer directory exists
#   ansible.builtin.file:
#     path: /mnt/cephfs/{{ share_name }}
#     state: directory
#     owner: root
#     mode: '0755'

# Déployer la stack
- name: Deploy Portainer stack
  community.docker.docker_stack:
    name: portainer
    state: present
    compose:
      - version: '3.8'
        services:
          agent:
            image: portainer/agent:lts
            volumes:
              - /var/run/docker.sock:/var/run/docker.sock
              - /var/lib/docker/volumes:/var/lib/docker/volumes
            networks:
              - portainer
            deploy:
              mode: global
              placement:
                constraints:
                  - node.platform.os == linux

          portainer:
            image: portainer/portainer-ce:lts
            command: -H tcp://tasks.agent:9001 --tlsskipverify
            ports:
              - "9443:9443"
              - "9000:9000"
              - "8000:8000"
            volumes:
              - /mnt/cephfs/portainer:/data
            networks:
              - portainer
            deploy:
              mode: replicated
              replicas: 1
              placement:
                constraints:
                  - node.role == manager
              update_config:
                parallelism: 1
                delay: 10s
                order: start-first
              restart_policy:
                condition: any
                delay: 5s
                max_attempts: 3
                window: 120s

        networks:
          portainer:
            external: true
            name: "{{ network_name }}"
  register: deployment_result
  run_once: true  # Exécuter uniquement sur un nœud pour éviter les conflits

# Vérifier le statut du déploiement
- name: Check if stack exists after deployment
  ansible.builtin.command: docker stack ls --format '{{ "{{.Name}}" }}'
  register: stack_list_after
  changed_when: false

- name: Report stack deployment status
  ansible.builtin.debug:
    msg: "{{ '✅ Stack deployed successfully.' if 'portainer' in stack_list_after.stdout_lines else '❌ Stack deployment failed.' }}"
