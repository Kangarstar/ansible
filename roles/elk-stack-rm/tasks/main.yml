# Ce playbook déploie elk en Haute disponibilité sur un cluster
# Il déploie un agent elasticsearch, metricbeat et filebeat sur chaque noeud de la swarm ainsi que l'interface kibana sur un seul noeud de la swarm
# Ce role est a lancer seulement après avoir installé docker et docker compose, initialisé la swarm et configuré du stockage


- name: Ensure git is installed
  apt:
    name: git
    state: present
  when: ansible_os_family == "Debian"

- name: Add GitHub's SSH host key to known_hosts
  known_hosts:
    name: '[ssh.github.com]:443'
    key: '[ssh.github.com]:443 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YUYD2vJdl2qGnF8JYBZBTKBrpCMYmM8mJrfOiVYJNcXFGAAGlvjSo7KvGYWlMrgjjSMqZP6Yf3I8oVqUEEHJ5KJ/1pJN5K9IjpjdqJOEPYqNZyq8J4QGRvl0JqZuOoVdnMBXHpEKJqBLQbGDXJfZcGNxHZ4kFNuqsKCYYdx7oJRF+1HYjSPqJ8DaAhWnxzKfKuEXqqAqiWNYvtXUHrOLxJJdObHHGRvPQ0YE5yNmDkEfFKzVlPRqOQ4PNQJAhBfm6gZzEtRSF1JlnYaYLyJBJDdcKCZnFIAYjDyWvOOZu/8WJ2vqLpD4FHzTzXzwT5IQzOPGCmKXJ5j5qBKRD3YNZZaLqEG8uCmTXHNqzNnqOzEqo='
    state: present
  become_user: "{{ admin_user }}"
  become: true

- name: Clone or update the Git repository
  git:
    repo: "{{ repo_url }}"
    dest: "{{ repo_dest }}"
    version: main
    force: true
    key_file: "/home/{{ admin_user }}/.ssh/deploy_key"
  become_user: "{{ admin_user }}"
  become: true
  environment:
    HOME: "/home/{{ admin_user }}"

- name: Check if 'elk' stack exists
  ansible.builtin.command: docker stack ls --format '{{ "{{.Name}}" }}'
  register: stack_list
  changed_when: false

# Déployer le stack
- name: Make script executable
  file:
    path: "{{ repo_dest }}/{{ script_path }}"
    mode: '0755'


- name: Remove Elastic Stack
  command: "./{{ script_path }}"
  args:
    chdir: "{{ repo_dest }}"

# Vérifier le statut du déploiement
- name: Check if stack exists after deployment
  ansible.builtin.command: docker stack ls --format '{{ "{{.Name}}" }}'
  register: stack_list_after
  changed_when: false

- name: Report stack deployment status
  ansible.builtin.debug:
    msg: "{{ '✅ Stack deployed successfully.' if 'portainer' in stack_list_after.stdout_lines else '❌ Stack deployment failed.' }}"
