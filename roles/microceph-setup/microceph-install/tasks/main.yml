# Ce role install Microceph et enleve la swap pour le stockage distribu√©
---
- name: Disable swap
  command: swapoff -a
  changed_when: false

- name: Remove swap from fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*\sswap\s+.*)$'
    replace: '# \1'

- name: Enable and start snapd service
  systemd:
    name: snapd
    enabled: true
    state: started

- name: Add snap to secure path
  copy:
    dest: /etc/sudoers.d/secure_path_snap
    content: 'Defaults secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"'
    mode: '0440'

- name: Install MicroCeph using the snap module
  become: true
  snap:
    name: microceph
    state: present
  register: snap_result
  retries: 5
  delay: 30
  until: snap_result is succeeded

- name: Fail if MicroCeph installation was unsuccessful
  fail:
    msg: "MicroCeph failed to install after multiple retries."
  when: snap_result is failed

# - name: Install MicroCeph
#   become: true
#   ansible.builtin.command:
#     cmd: snap install microceph
#   register: microceph_install
#   changed_when: microceph_install.rc == 0 and "'already installed' not in microceph_install.stdout"
#   failed_when: microceph_install.rc != 0

- name: Hold automatic MicroCeph updates
  command: snap refresh --hold microceph
  changed_when: false

# - name: Connect microceph:hardware-observe
#   command: snap connect microceph:hardware-observe
#   register: hardware_observe
#   changed_when: "'already connected' not in hardware_observe.stdout"

# - name: Connect microceph:mount-observe
#   command: snap connect microceph:mount-observe
#   register: mount_observe
#   changed_when: "'already connected' not in mount_observe.stdout"

# - name: Connect microceph:process-control
#   command: snap connect microceph:process-control
#   register: process_control
#   changed_when: "'already connected' not in process_control.stdout"
