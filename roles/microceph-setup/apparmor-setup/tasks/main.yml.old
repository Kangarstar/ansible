- name: Find snap-confine profile file
  find:
    paths: /var/lib/snapd/apparmor/profiles/
    patterns: "snap-confine.snapd.*"
  register: snap_confine_file

- name: Display found snap-confine file
  debug:
    var: snap_confine_file.files[0].path
  when: snap_confine_file.matched > 0

- name: Check if capabilities are already in the file
  shell: |
    grep -q "capability net_admin," {{ snap_confine_file.files[0].path }} || echo "missing_net_admin"
    grep -q "capability perfmon," {{ snap_confine_file.files[0].path }} || echo "missing_perfmon"
  args:
    executable: /bin/bash
  register: capability_check
  changed_when: capability_check.stdout | length > 0
  failed_when: false
  when: snap_confine_file.matched > 0

- name: Add lines and reload apparmor
  when: "'missing_net_admin' in capability_check.stdout or 'missing_perfmon' in capability_check.stdout"
  block:

    - name: Get the last capability line
      shell: |
        set -o pipefail
        grep -n "capability" {{ snap_confine_file.files[0].path }} | tail -1
      args:
        executable: /bin/bash
      register: last_capability_line
      when: snap_confine_file.matched > 0
      changed_when: false

    - name: Add net_admin capability if not present
      lineinfile:
        path: "{{ snap_confine_file.files[0].path }}"
        line: "  capability net_admin,"
        insertafter: "{{ last_capability_line.stdout.split(':')[1] }}"
        state: present
      when: "'missing_net_admin' in capability_check.stdout"

    - name: Add perfmon capability if not present
      lineinfile:
        path: "{{ snap_confine_file.files[0].path }}"
        line: "  capability perfmon,"
        insertafter: "capability net_admin,"
        state: present
      when: "'missing_perfmon' in capability_check.stdout"

    - name: Restart AppArmor service
      service:
        name: apparmor
        state: restarted

    - name: Reload AppArmor profiles
      shell: apparmor_parser -r /var/lib/snapd/apparmor/profiles/snap-confine.snapd.*
      args:
        executable: /bin/bash
