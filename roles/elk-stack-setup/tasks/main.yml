# Ce playbook déploie elk en Haute disponibilité sur un cluster
# Il déploie un agent elasticsearch, metricbeat et filebeat sur chaque noeud de la swarm ainsi que l'interface kibana sur un seul noeud de la swarm
# Ce role est a lancer seulement après avoir installé docker et docker compose, initialisé la swarm et configuré du stockage
---
- name: Ensure git is installed
  apt:
    name: git
    state: present
  when: ansible_os_family == "Debian"

- name: Clone or update the Git repository with SSH agent
  shell: |
    eval "$(ssh-agent -s)"
    ssh-add {{ deploy_key_path }}
    git clone {{ repo_url }} {{ repo_dest }} || (cd {{ repo_dest }} && git pull)
  become_user: "{{ admin_user }}"
  become: true
  environment:
    HOME: "/home/{{ admin_user }}"
  args:
    creates: "{{ repo_dest }}/.git"

- name: Fix ownership of git repository
  file:
    path: "{{ repo_dest }}"
    owner: "{{ admin_user }}"
    group: "{{ admin_user }}"
    recurse: true
  become: true

- name: Check if 'elk' stack exists
  ansible.builtin.command: docker stack ls --format '{{ "{{.Name}}" }}'
  register: stack_list
  changed_when: false

# Vérifier si le réseau existe déjà
- name: Check if network exists
  ansible.builtin.command: docker network ls --filter "name={{ network_name }}" --format '{{ "{{.Name}}" }}'
  register: network_list
  changed_when: false
  run_once: true

# Créer le réseau s'il n'existe pas
- name: Create Docker network
  community.docker.docker_network:
    name: "{{ network_name }}"
    driver: overlay
    attachable: true
  when: "network_name not in network_list.stdout_lines"
  run_once: true

# Déployer le stack
- name: Make script executable
  file:
    path: "{{ repo_dest }}/{{ script_path }}"
    mode: '0755'

- name: Deploy Elastic Stack
  command: "./{{ script_path }}"
  args:
    chdir: "{{ repo_dest }}"
  changed_when: false

# Vérifier le statut du déploiement
- name: Check if stack exists after deployment
  ansible.builtin.command: docker stack ls --format '{{ "{{.Name}}" }}'
  register: stack_list_after
  changed_when: false

- name: Report stack deployment status
  ansible.builtin.debug:
    msg: "{{ '✅ Stack deployed successfully.' if 'portainer' in stack_list_after.stdout_lines else '❌ Stack deployment failed.' }}"
